// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://shahid:shahid@localhost:3306/presma"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  role      Role     @default(USER)
  password  String
  projectAssign ProjectAssign[]


  // ...
}

enum Role {
  USER
  ADMIN
  MANAGER
}

model ProjectCategory {
  id            Int         @id @default(autoincrement())
  category_name String
  projects      Project[]
  createdAt     DateTime   @default(now()) @db.Timestamp(0)
  updatedAt     DateTime    @updatedAt @db.Timestamp(0)
}

model Project {
  id          Int          @id @default(autoincrement())
  projectName String
  category    ProjectCategory @relation(fields: [categoryId], references: [id])
  categoryId  Int
  documents   String
  startDate   DateTime 
  endDate     DateTime
  status      Boolean
  thumbnail   String
  createdAt   DateTime    @default(now()) @db.Timestamp(0)
  updatedAt   DateTime    @updatedAt @db.Timestamp(0)
  projectParts ProjectPart[]
  projectAssigns ProjectAssign[]

  // ...
}

model ProjectPart {
  id               Int         @id @default(autoincrement())
  projectPartName  String
  projectPartDdesc  String
  project          Project     @relation(fields: [projectId], references: [id])
  projectId        Int

  projectAssigns   ProjectAssign[]
  frontStatus      String
  backStatus       String
  deletedAt        DateTime
  createdAt        DateTime    @default(now()) @db.Timestamp(0)
  updatedAt        DateTime    @updatedAt @db.Timestamp(0)

  // ...
}

model ProjectAssign {
  id               Int         @id @default(autoincrement())
  startdate        DateTime
  endDate          DateTime
  status           Boolean
  deletedAt        DateTime
  createdAt        DateTime    @default(now()) @db.Timestamp(0)
  updatedAt        DateTime    @updatedAt @db.Timestamp(0)

  project          Project     @relation(fields: [projectId], references: [id])
  projectId        Int

  projectPart      ProjectPart @relation(fields: [projectPartId], references: [id])
  projectPartId    Int

  // Uncomment the following fields to establish a relationship with User
  userId           Int
  user             User        @relation(fields: [userId], references: [id])

  // ...
}
